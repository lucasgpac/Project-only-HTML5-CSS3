@charset "UTF-8";

@import url('https://fonts.googleapis.com/css2?family=Bebas+Neue&display=swap');

@font-face {
    font-family: 'Android';
    src: url('/desafios/des010/pacote-projeto-d010/fontes/idroid.otf') format('opentype'); /* para achar a pasta em URL, preciso abrir aspas e depois digitar / ou ./ ou ../ */
    font-weight: normal;
}

:root { /* com essa pseudoclasse crio variáveis em CSS. Para criar uma var em CSS tenho que começar com -- */
    --cor0: #c5ebd6;
    --cor1: #83E1AD;
    --cor2: #3DDC84;
    --cor3: #2FA866;
    --cor4: #1A5C37;
    --cor5: #063d1e;

    --fonte-padrao: Arial, Verdana, Helvetiva, sans-serif;
    --fonte-destaque: 'Bebas Neue', cursive;
    --fonte-android: 'Android', cursive; /* a fonte cursive é uma genérica */
}

* { /* seletor global. Com isso, todas as características aqui servem para todo o html. As mudanças que fiz aqui são para a margem e padding de uma caixa não atrapalhar ou não se confundir com a de outras */ 
    margin: 0px;
    padding: 0px;
}

body {
    background-color: var(--cor0);
    font-family: var(--fonte-padrao);
}

p {
    margin: 15px 0px; /* assim eu configuro na ordem cima, direita, baixo e esquerda. Como se fosse 15 0 15 0. É só uma forma resumida, pra não repetir */
    text-align: justify;
}

header {
    background-image: linear-gradient(to bottom, var(--cor3), var(--cor5));
    height: 150px;
    text-align: center;
    padding-top: 40px;
}

header > h1 {
    color: white;
    font-family: var(--fonte-destaque);
    margin-bottom: 20px;
    font-size: 3em;
}

header > p {
    color: white;
    font-family: var(--fonte-destaque);
    font-size: 1.2em;
    margin-bottom: 20px;
    text-align: center;
}

nav {
    background-color: var(--cor5);
    padding: 10px;   
}

nav > a {
    color: var(--cor1);
    padding: 10px;
    text-decoration: none;
    font-weight: bold;
    border-radius: 5px;
    transition-duration: 1s;
}

nav > a:hover {
    background-color: var(--cor3);
}

main {
    min-width: 300px;
    max-width: 1000px;
    background-color: white;
    margin: auto; /* assim o conteúdo do main fica no centro da tela */
    padding: 20px;
    margin-bottom: 30px;
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
}

main h1 { /* aqui pra funcionar tive que ocultar o >, isso pq o h1 não está imediatamente dentro do main. Está assim main > article > h1 */
    color: var(--cor5);
    font-family: var(--fonte-android);
}

main h2 {
    font-family: var(--fonte-android);
    background-image: linear-gradient(to right, var(--cor1), transparent);
}

main p {
    margin: 15px 0px;
    text-align: justify;
    text-indent: 30px; /* Aqui ele dá aquele recuo na primeira linha de cada parágrafo */ 
    line-height: 1.5em; /* este é o espaçamento entre linhas! */
}

main a {
    text-decoration: none;
    background-color: var(--cor1);
}

main a:hover {
    text-decoration: underline;
}

main img {
    width: 100%; /* assim a imagem se adapta aos diferentes tamanhos de tela automaticamente */
}

main img.pequena {
    max-width: 350px;
    margin: auto;
    display: block; /* além do margin AUTO, precisei do display block pra centralizar a imagem. Isso pq, por definição, uma imagem não é uma caixa. Então o block transformou a imagem em caixa e o margin auto centralizou */
}

div.video {
    background-color: var(--cor5);
    margin-bottom: 30px;
    padding: 20px;
    padding-bottom: 50%;

    position: relative;
}

div.video > iframe {
    position: absolute;

    top: 5%;
    left: 5%;
    width: 90%;
    height: 90%;
}

aside {
    background-color: var(--cor1);
    padding: 10px;
    border-radius: 10px;
}

aside > ul {
    list-style-position: inside;
    columns: 2;
}

footer {
    background-color: var(--cor5);
    color: white;
    text-align: center;
    padding: 5px;
    
}

footer p {
    text-align: center;
}

footer a  {
    color: white;
    text-decoration: none;
}

footer a:hover {
    text-decoration: underline;
}